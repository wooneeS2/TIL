{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/gim-wonhui/Desktop/project/personal/TIL/next.js/next-udemy/section5/pages/[pid].js\";\n\nfunction ProductDetailPage(props) {\n  var loadedProduct = props.loadedProduct;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: loadedProduct.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: loadedProduct.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n} //컴포넌트 함수보다 빨리 실행됨\n\n\n_c = ProductDetailPage;\nexport var __N_SSG = true;\nexport default ProductDetailPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductDetailPage\");","map":{"version":3,"sources":["/Users/gim-wonhui/Desktop/project/personal/TIL/next.js/next-udemy/section5/pages/[pid].js"],"names":["ProductDetailPage","props","loadedProduct","title","description"],"mappings":";;;;AAGA,SAASA,iBAAT,CAA2BC,KAA3B,EAAkC;AAAA,MACtBC,aADsB,GACJD,KADI,CACtBC,aADsB;AAE9B,sBACI;AAAA,4BACI;AAAA,gBAAKA,aAAa,CAACC;AAAnB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAID,aAAa,CAACE;AAAlB;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAMH,C,CAED;;;KAVSJ,iB;;AAwCT,eAAeA,iBAAf","sourcesContent":["import fs from 'fs/promises';\nimport path from 'path';\n\nfunction ProductDetailPage(props) {\n    const { loadedProduct } = props;\n    return (\n        <>\n            <h1>{loadedProduct.title}</h1>\n            <p>{loadedProduct.description}</p>\n        </>\n    );\n}\n\n//컴포넌트 함수보다 빨리 실행됨\nexport async function getStaticProps(context) {\n    const { params } = context;\n    const productId = params.pid;\n\n    const filePath = path.join(process.cwd(), 'data', 'dummy-backend.json');\n    const jsonData = await fs.readFile(filePath);\n    const data = JSON.parse(jsonData);\n\n    const product = data.products.find(product => product.id === product.id);\n\n    return {\n        props: {\n            loadedProduct: product,\n        },\n    };\n}\n\n//정적으로 데이터 페칭할 때 미리 데이터 페칭 개수를 알려주는 함수\nexport async function getStaticPaths() {\n    return {\n        paths: [\n            { params: { pid: 'p1' } },\n            { params: { pid: 'p2' } },\n            { params: { pid: 'p3' } },\n        ],\n        fallback: false,\n    };\n}\n\nexport default ProductDetailPage;\n"]},"metadata":{},"sourceType":"module"}