{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/gim-wonhui/Desktop/project/personal/TIL/next.js/next-udemy/section5/pages/last-sales.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport useSWR from 'swr';\n\nfunction LastSalesPage() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(),\n      sales = _useState[0],\n      setSales = _useState[1];\n\n  var _useSWR = useSWR('https://nextjs-course-b0221-default-rtdb.firebaseio.com/sales.json'),\n      data = _useSWR.data,\n      error = _useSWR.error;\n\n  useEffect(function () {\n    if (data) {\n      var transformedSales = [];\n\n      for (var key in data) {\n        transformedSales.push({\n          id: key,\n          userName: data[key].userName,\n          value: data[key].value\n        });\n      }\n\n      setSales(transformedSales);\n    }\n  }, [data]);\n\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Faild to load\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (!sales) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: sales.map(function (sale) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [sale.userName, \" - $\", sale.value]\n      }, sale.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LastSalesPage, \"nm5HPQBwFg2U806W0c1B+0jNeB4=\", false, function () {\n  return [useSWR];\n});\n\n_c = LastSalesPage;\nexport default LastSalesPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LastSalesPage\");","map":{"version":3,"sources":["/Users/gim-wonhui/Desktop/project/personal/TIL/next.js/next-udemy/section5/pages/last-sales.js"],"names":["useEffect","useState","useSWR","LastSalesPage","sales","setSales","data","error","transformedSales","key","push","id","userName","value","map","sale"],"mappings":";;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,KAAnB;;AAEA,SAASC,aAAT,GAAyB;AAAA;;AAAA;;AAAA,kBACKF,QAAQ,EADb;AAAA,MACdG,KADc;AAAA,MACPC,QADO;;AAAA,gBAGGH,MAAM,CAC1B,oEAD0B,CAHT;AAAA,MAGbI,IAHa,WAGbA,IAHa;AAAA,MAGPC,KAHO,WAGPA,KAHO;;AAOrBP,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIM,IAAJ,EAAU;AACN,UAAME,gBAAgB,GAAG,EAAzB;;AACA,WAAK,IAAMC,GAAX,IAAkBH,IAAlB,EAAwB;AACpBE,QAAAA,gBAAgB,CAACE,IAAjB,CAAsB;AAClBC,UAAAA,EAAE,EAAEF,GADc;AAElBG,UAAAA,QAAQ,EAAEN,IAAI,CAACG,GAAD,CAAJ,CAAUG,QAFF;AAGlBC,UAAAA,KAAK,EAAEP,IAAI,CAACG,GAAD,CAAJ,CAAUI;AAHC,SAAtB;AAKH;;AACDR,MAAAA,QAAQ,CAACG,gBAAD,CAAR;AACH;AACJ,GAZQ,EAYN,CAACF,IAAD,CAZM,CAAT;;AAcA,MAAI,CAACA,IAAL,EAAW;AACP,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,MAAIC,KAAJ,EAAW;AACP,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,MAAI,CAACH,KAAL,EAAY;AACR,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI;AAAA,cACKA,KAAK,CAACU,GAAN,CAAU,UAAAC,IAAI,EAAI;AACf,0BACI;AAAA,mBACKA,IAAI,CAACH,QADV,UACwBG,IAAI,CAACF,KAD7B;AAAA,SAASE,IAAI,CAACJ,EAAd;AAAA;AAAA;AAAA;AAAA,eADJ;AAKH,KANA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GA5CQR,a;UAGmBD,M;;;KAHnBC,a;AA8CT,eAAeA,aAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport useSWR from 'swr';\n\nfunction LastSalesPage() {\n    const [sales, setSales] = useState();\n\n    const { data, error } = useSWR(\n        'https://nextjs-course-b0221-default-rtdb.firebaseio.com/sales.json'\n    );\n\n    useEffect(() => {\n        if (data) {\n            const transformedSales = [];\n            for (const key in data) {\n                transformedSales.push({\n                    id: key,\n                    userName: data[key].userName,\n                    value: data[key].value,\n                });\n            }\n            setSales(transformedSales);\n        }\n    }, [data]);\n\n    if (!data) {\n        return <p>Loading....</p>;\n    }\n\n    if (error) {\n        return <p>Faild to load</p>;\n    }\n\n    if (!sales) {\n        return <p>Loading...</p>;\n    }\n\n    return (\n        <ul>\n            {sales.map(sale => {\n                return (\n                    <li key={sale.id}>\n                        {sale.userName} - ${sale.value}\n                    </li>\n                );\n            })}\n        </ul>\n    );\n}\n\nexport default LastSalesPage;\n"]},"metadata":{},"sourceType":"module"}